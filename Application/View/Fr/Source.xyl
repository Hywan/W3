<?xml version="1.0" encoding="utf-8"?>

<overlay xmlns="http://hoa-project.net/xyl/xylophone">
  <yield id="yContent">
    <h1>Sources</h1>

    <p>Hoa distribue les projets principaux suivants :</p>
    <ul>
      <li><code>Central</code> : l'ensemble de <strong>toutes</strong> les
      bibliothèques standards ;</li>
      <li><code>Library/<em>*</em></code> : bibliothèques
      <strong>standards</strong> isolées ;</li>
      <li><code>Hoathis/<em>*</em></code> : bibliothèques
      <strong>utilisateurs</strong> isolées (maintenues par Hoa).</li>
    </ul>
    <p>Il existe plusieurs façon d'installer Hoa : dans sa
    <strong>totalité</strong> (avec le central) ou <strong>en partie</strong>
    (choix des bibliothèques), et <strong>globalement</strong> (sur le système)
    ou <strong>localement</strong> (dans une application). Dans le cas d'une
    installation <strong>globale</strong> et pour les systèmes respectants le
    <a href="http://refspecs.linuxfoundation.org/fhs.shtml"><em lang="en">Filesystem
    Hierarchy Standard</em></a> (dans sa version 2.2 minimum), Hoa préfèrera
    s'installer dans le dossier <code>/usr/local/lib/Hoa/</code>. Pour les
    autres systèmes, comme par exemple Windows, Hoa préfèrera s'installer dans
    le dossier <code>C:\Program Files\Hoa\</code>.</p>

    <h2 id="Dependency_manager_(Composer)">Gestionnaire de dépendances
    (Composer)</h2>

    <p><img src="hoa://Application/Public/Image/Logo/Composer.png"
            alt="Logo de Composer" class="fright" />
    Pour gérer les dépendances entre les bibliothèques de Hoa, nous
    recommandons l'outil <a href="http://getcomposer.org/">Composer</a>. Toutes
    les dépendances gérées avec Composer sont enregistrées auprès du dépôt
    <a href="https://packagist.org/search/?q=hoa/">Packagist</a> sous les noms
    <code>hoa/<em>library</em></code> et <code>hoathis/<em>library</em></code>.
    Ainsi, par exemple, pour installer la bibliothèque
    <code>Hoa\Websocket</code>, il faudra écrire dans un fichier
    <code>composer.json</code> :</p>
    <pre><code class="language-json">{
    "require": {
        "hoa/websocket": "dev-master"
    },
    "minimum-stability": "dev"
}</code></pre>
    <p>Puis pour installer les dépendances :</p>
    <pre><code class="language-shell">$ composer install</code></pre>
    <p>Il est recommandé de <a href="https://getcomposer.org/doc/">lire la
    documentation de Composer</a> si vous n'êtes pas familier avec cet outil.</p>
    <p>Pour tester que l'installation s'est bien déroulée :</p>
    <pre><code class="language-php">&amp;lt;?php

require_once 'vendor/autoload.php';
var_dump(HOA); // bool(true)</code></pre>

    <h2 id="Version_manager_(Git)">Gestionnaire de versions (Git)</h2>

    <p><img src="hoa://Application/Public/Image/Logo/Git.png" alt="Logo de Git"
            class="fright" />
    Hoa utilise <a href="http://git-scm.com/">Git</a> pour tous ses projets.
    L'index des dépôts se trouve à l'adresse :
    <a href="http://git.hoa-project.net">git.hoa-project.net</a>. Les dépôts
    sont nommés <code><em>project</em>.git</code>. Ainsi, pour
    obtenir les sources du projet <code>Central</code> :</p>
    <pre><code class="language-shell">$ git clone http://git.hoa-project.net/Central.git Hoa.central</code></pre>
    <p>Pour obtenir une bibliothèque, par exemple <code>Hoa\Core</code> :</p>
    <pre><code class="language-shell">$ git clone http://git.hoa-project.net/Library/Core.git Hoa/Core</code></pre>
    <p>Il est recommandé de <a href="http://git-scm.com/documentation">lire la
    documentation de Git</a> si vous n'êtes pas familier avec cet outil.</p>
    <p>Si vous souhaitez une installation globale et totale avec le central,
    tout en respectant la recommandation sur la localisation de Hoa, vous
    pourrez utiliser un lien symbolique :</p>
    <pre><code class="language-shell">$ git clone http://git.hoa-project.net/Central.git /usr/local/lib/Hoa.central
$ ln -s /usr/local/lib/Hoa.central/Hoa /usr/local/lib/Hoa</code></pre>
    <p><img src="hoa://Application/Public/Image/Logo/Pikacode.png"
           alt="Logo de Pikacode" class="fright" />
       <img src="hoa://Application/Public/Image/Logo/Github.png"
           alt="Logo de Github" class="fright" />
    Des miroirs existent pour la plupart des projets, notamment sur
    <a href="@github">Github</a> et
    <a href="https://pikacode.com/hoaproject/">Pikacode</a>. Les noms des
    projets sont identiques autant que possible. La plus grosse différence est
    pour les bibliothèques : l'accès se fait sans le préfixe
    <code>Library/</code> ou alors <code>Hoathis/</code> est remplacé par
    <code>Hoathis-</code>. Ainsi :</p>
    <pre><code class="language-shell">$ git clone https://github.com/hoaproject/Core.git</code></pre>
    <p>Les miroirs sont en permanence synchronisés, vous n'aurez jamais de
    différences.</p>
    <p>Pour tester que l'installation s'est bien déroulée :</p>
    <pre><code class="language-php">&amp;lt;?php

require_once '/usr/local/lib/Hoa/Core/Core.php';
var_dump(HOA); // bool(true)</code></pre>

    <h2 id="Archives">Archives</h2>

    <p>Des archives sont produites à chaque mise à jour de certains projets.
    L'index des archives se trouve à l'adresse :
    <a href="http://download.hoa-project.net">download.hoa-project.net</a>.
    Elles suivent également le nommage des projets. Plusieurs formats sont
    disponibles : <code>.zip</code>, <code>.tar.gz</code> et
    <code>.phar</code> (pour <a href="http://php.net/phar">les archives
    PHP</a>).</p>
    <p>Le protocole WebDAV permet également d'accéder aux archives, à
    l'adresse : <a href="http://dav.hoa-project.net">dav.hoa-project.net</a>.</p>

    <h2 id="Structure_of_a_library">Structure d'une
    bibliothèque</h2>

    <p>Voici la structure d'une bibliothèque :</p>
    <ul>
      <li>sources à la racine ;</li>
      <li><code>Bin/</code>, pour les binaires ;</li>
      <li><code>Documentation/</code>, pour <a href="@l#Hack_book">les chapitres
      du <em lang="en">hack book</em> (documentation)</a> ;</li>
      <li><code>Test/</code>, pour les tests ;</li>
      <li><code>README.md</code>, pour une description en anglais avec des
      exemples usuels ;</li>
      <li><code>composer.json</code>, pour les dépendances.</li>
    </ul>
    <p>Les binaires sont accessibles via la commande : <code>hoa
    <em>library</em>:<em>command</em></code>. Par exemple, pour
    <code>Hoa\Core\Bin\Resolve</code>, nous écrirons :
    <code>hoa core:resolve</code>.</p>
    <p class="warning">Actuellement, les tests sont en cours de migration !
    <br />
    Merci d'être patient.</p>
    <p>Les bibliothèques sont dans trois états différents selon leur
    évolution :</p>
    <div id="library_states" class="schema"
         style="max-width: 550px; margin: 0 auto;"></div>
    <script>
    Hoa.Document.onReady(function ( ) {

        var paper = Hoa.Graph(Hoa.$('#library_states'), 550, 150);
        var grid  = paper.grid(0, 0, 550, 150, 3, 1);
        var step1 = grid.push(paper.rect(0, 0, 120, 90, 3, 'existantes'));
        var step2 = grid.push(paper.rect(0, 0, 120, 90, 3, 'matures'));
        var step3 = grid.push(paper.rect(0, 0, 120, 90, 3, 'finalisées'));

        paper.link.between(step1, step2);
        paper.link.between(step2, step3);
    });
    </script>
    <p>Le premier état représente une bibliothèque qui sera intéressante pour
    Hoa mais qui est en cours d'écriture et d'<strong>élaboration</strong>. Le
    deuxième état représente une bibliothèque avec une <strong>API
    fixe</strong>, un code abouti et <strong>mature</strong>. Une telle
    bibliothèque est testée intensivement par tous les utilisateurs pour
    <strong>éprouver</strong> le code et son API. Après un certain temps, la
    bibliothèque atteint le dernier état : elle est <strong>finalisée</strong>.
    Son API ne changera plus <strong>jamais</strong>. Lors de l'introduction de
    nouveautés, la bibliothèque reste finalisée ou redevient mature selon
    l'importance des nouveautés.</p>

    <h2 id="Rolling_release"><em lang="en">Rolling-release</em></h2>

    <p>À venir.</p>

    <script src="hoa://Application/Public/Javascript/Hoa.Graph.js"></script>
    <script src="hoa://Application/Public/Javascript/Hoa.Graph.style.js"></script>
  </yield>
</overlay>
